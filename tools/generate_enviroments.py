#! /usr/bin/env python3

import yaml

from pathlib import Path
from jinja2 import Template, Environment, FileSystemLoader


requirements = Path("enviroments.yml")
requirements = yaml.safe_load(requirements.read_text())

AUTO_GENERATED_HEADER = "This file was automatically generated. Do not edit this file directly."

# env = Environment(loader = FileSystemLoader('./templates'), trim_blocks=True, lstrip_blocks=True)


def generate_requirements_dict():
  requirements_txt = {"AUTO_GENERATED_HEADER": AUTO_GENERATED_HEADER}

  for package in requirements['packages']:
    name    = list(package.keys())[0]
    version = f"=={package[name]}" if package[name] else ''
    requirements_txt[name] = f"{name}{version}"

  return requirements_txt


requirements_txt = generate_requirements_dict()

# Genreate requirements.txt or environment.yml
for enviroment, settings in requirements["enviroments"].items():
  if settings["installer"] == "pip":
    enviroment_template = Path("minimal-requirements.template").read_text()
    template = Template(enviroment_template)
    print(template.render(requirements_txt))

