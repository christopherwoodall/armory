ARG base_image_tag

FROM twosixarmory/base:${base_image_tag} AS armory-local

# pip Configuration - https://pip.pypa.io/en/stable/user_guide/#config-file
ARG PIP_DISABLE_PIP_VERSION_CHECK=1
ARG PIP_NO_CACHE_DIR=1

USER root

SHELL ["/bin/bash", "-c"]

# Replace shell with bash so we can source files
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# NOTE: This COPY command is filtered using the `.dockerignore` file
#       in the root of the repo.
COPY ./ /armory-repo

WORKDIR /armory-repo

RUN echo "Updating pip" && \
    pip install --upgrade pip && \
    echo "Building Armory from local source" && \
    pip install --no-compile --editable '.[all]' && \
    echo "Configuring Armory..." && \
    armory configure --use-default && \
    echo "Cleaning up..." && \
    rm -rf /armory-repo/.git

RUN pip install \
        git+https://github.com/ifzhang/ByteTrack.git \
        thop \
        lap \
        Cython && \
    # Requires cython for install, so will fail if run in the same pip install as cython
    pip install cython-bbox


# Some TF tools expect a "python" binary
RUN ln -s $(which python3) /usr/local/bin/python && \
    # TODO: Move misc. patches into base image.
    conda config --set auto_activate_base true && \
    conda init bash

# Setup environmental variables
ENV PATH="/opt/conda/envs/base/bin:/opt/conda/bin:/usr/local/cuda/lib64:${PATH}"
# TensorFlow requirement
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/conda/envs/base/lib/

# Create armory user to avoid running as root
RUN useradd --uid 1000 --user-group --create-home --no-log-init --shell /bin/bash user && \
    chown -R --from=root user /workspace && \
    chown -R --from=root user /armory-repo

USER user

WORKDIR /workspace

VOLUME ["/workspace", "/armory-repo", "/home/user"]

# Jupyter
EXPOSE 8888

STOPSIGNAL SIGQUIT

